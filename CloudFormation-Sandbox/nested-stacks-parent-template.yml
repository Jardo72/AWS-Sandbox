#
# Copyright 2021 Jaroslav Chmurny
#
# This file is part of AWS Sandbox.
#
# AWS Sandbox is free software developed for educational purposes. It
# is licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Parent stack template for the nested stacks demo.

Parameters:
  NestedStacksTemplateURLParam:
    Description: URL of the CloudFormation template for the two nested stacks (the template has to reside in an S3 bucket)
    Type: String

Resources:
  CloudWatchLogsAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${AWS::StackName}-CloudWatchLogsPermissions"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: 'arn:aws:logs:*:*:*'

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-LambdaExecutionRole"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Ref CloudWatchLogsAccessPolicy

  NestedStackOne:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref NestedStacksTemplateURLParam
      TimeoutInMinutes: 2
      Parameters:
        FunctionNameParam: !Sub "${AWS::StackName}-FunctionOne"
        LambdaExecutionRoleParam: !GetAtt LambdaExecutionRole.Arn

  NestedStackTwo:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref NestedStacksTemplateURLParam
      TimeoutInMinutes: 2
      Parameters:
        FunctionNameParam: !Sub "${AWS::StackName}-FunctionTwo"
        LambdaExecutionRoleParam: !GetAtt LambdaExecutionRole.Arn
        DemoVariableValueParam:
          Fn::GetAtt:
            - NestedStackOne
            - Outputs.LambdaFunctionArn
